---
title: "Cell typing (InSituType)"
author: "Pauline"
date: today
format: 
    html:
        self-contained: true
        toc: true
editor: source
editor_options: 
  chunk_output_type: console
---

## Load packages

```{r, warning=FALSE, message=FALSE}

library(SpatialExperiment)
library(SpatialExperimentIO)
library(SingleCellExperiment)
library(Seurat)
library(harmony)
library(InSituType)
library(dplyr)
library(ggplot2)
library(ggthemes)
library(patchwork)

```

## Supervised cell typing with InSituType

### Cluster markers

```{r, warning=FALSE, message=FALSE}

TMAnr <- 2

cos_path <- sprintf("C:/CosMx/Datasets/6k/TMA%s", TMAnr) # Adjust file path if necessary

# Get the last version of the Seurat object
cos_seurat_post <- readRDS(file.path(cos_path, "rds files/cos_seurat_harmony.rds"))

cluster_markers <- FindAllMarkers(cos_seurat_post, only.pos = TRUE)

top_markers <- cluster_markers %>%
  group_by(cluster) %>%
  filter(p_val_adj < 0.05) %>%  # Filter significant markers
  arrange(cluster, desc(avg_log2FC)) %>%  # Sort by cluster and log2FC
  top_n(n = 5, wt = avg_log2FC)  # Select top 5 markers per cluster

```

### Prepare negative mean

```{r, warning=FALSE, message=FALSE}

# Get the filtered SpatialExperiment object
cos_spe_filtered <- readRDS(file.path(cos_path, "/rds files/cos_spe_filtered.rds"))

neg_probes_present <- grepl("^Negative", rownames(cos_spe_filtered))

# Compute mean negative control counts per cell
# negmean <- assay(cos_spe_filtered)[neg_probes_present, ] %>% 
#   as.matrix() %>% 
#   t() %>% 
#   rowMeans()

negmean <- colData(cos_spe_filtered)$nCount_negprobes / 20 

```

### Fast cohorting

```{r}

cohort_features <- grep("Max|Mean", colnames(cos_seurat_post@meta.data), value = TRUE)

cohort <- fastCohorting(cos_seurat_post@meta.data[, cohort_features], gaussian_transform = TRUE)

table(cohort)

```

### Clustering

```{r, warning=FALSE, message=FALSE}

counts_celltyping <- t(assay(cos_spe_filtered, "counts"))

ref_matrix <- as.matrix(read.csv("./Info/reference_matrix.csv", row.names = 1))

sup_clusters <- insitutypeML(
  x = counts_celltyping,
  neg = negmean,
  reference_profiles = ref_matrix,
  cohort = cohort
)

str(sup_clusters)

```

```{r, warning=FALSE, message=FALSE}

cos_seurat_post$InSituTypeID <- sup_clusters$clust

IST_heatmap <- heatmap(
  sweep(sup_clusters$profiles, 1, pmax(apply(sup_clusters$profiles, 1, max), 0.2), "/"), 
  scale = "none",
  main = "Cluster mean expression profiles"
  )

```

```{r, warning=FALSE, message=FALSE}

cols <- c(
  "#cc0000", "#ff3399", "#ffff66", "#ffb366", "#b30059", "#33ddff", "#ff3399",
  "#9966ff", "#bb99ff", "#ff8000", "#ff99cc", "#ff9933", "#5500ff", "#7733ff", 
  "#ccff33"
)

cols <- cols[seq_along(unique(sup_clusters$clust))]
names(cols) <- unique(sup_clusters$clust)

umap_df <- as.data.frame(Embeddings(cos_seurat_post, "umap"))
umap_df$cluster <- factor(sup_clusters$clust)

umap_plot <- ggplot(umap_df, aes(x = umap_1, y = umap_2, color = cluster)) +
  geom_point(alpha = 0.8, size = 0.5) +
  scale_color_manual(values = cols) +
  theme_minimal() +
  theme(legend.position = "right") +
  labs(
    title = "Cell Clusters in UMAP Space",
    x = "UMAP 1",
    y = "UMAP 2",
    colour = "Cell types"
  ) +
  guides(color = guide_legend(override.aes = list(size = 2, shape = 15)))

umap_plot_facet <- ggplot(umap_df, aes(x = umap_1, y = umap_2, color = cluster)) +
  geom_point(alpha = 0.8, size = 0.5) +
  scale_color_manual(values = cols) +
  theme_minimal() +
  theme(legend.position = "right") +
  labs(
    title = "Cell Clusters in UMAP Space",
    x = "UMAP 1",
    y = "UMAP 2",
    colour = "Cell types"
  ) +
  facet_wrap(vars(cluster), nrow = 5, ncol = 3) +
  guides(color = guide_legend(override.aes = list(size = 2, shape = 15)))

spatial_df <- as.data.frame(Embeddings(cos_seurat_post, "spatial"))
spatial_df$cluster <- factor(sup_clusters$clust)

spatial_plot <- ggplot(spatial_df, aes(x = spatial_1, y = spatial_2, color = cluster)) +
  geom_point(alpha = 0.8, size = 0.5) +
  scale_color_manual(values = cols) +
  theme_minimal() +
  theme(legend.position = "right") +
  labs(
    title = "Spatial arrangement of cell clusters",
    x = "",
    y = "",
    colour = "Cell types"
  ) +
  guides(color = guide_legend(override.aes = list(size = 3, shape = 15)))

umap_plot
umap_plot_facet
spatial_plot

```

```{r}
sessionInfo()
```
---
title: "CosMx data analysis"
author: "Pauline"
date: today
format: 
    html:
        self-contained: true
        toc: true
editor: source
editor_options: 
  chunk_output_type: console
---

## Load packages

```{r, warning=FALSE, message=FALSE}

library(SpatialExperiment)
library(SpatialExperimentIO)
library(SingleCellExperiment)
library(Seurat)
library(harmony)
library(InSituType)
library(dplyr)
library(ggplot2)
library(ggthemes)
library(ggpubr)

```

## Create `SeuratObject` from `SpatialExperiment`

```{r, warning=FALSE, message=FALSE}

cos_path <- "C:/CosMx/Datasets/6k/TMA1"

# Get the last version of the SpatialExperiment object
cos_spe_final <- readRDS(file.path(cos_path, "rds files/cos_spe_final.rds"))

counts <- assay(cos_spe_final, "counts") # Expression matrix
meta_data <- as.data.frame(colData(cos_spe_final)) # Metadata
spatial_coords <- as.data.frame(spatialCoords(cos_spe_final)) # Spatial coordinates

colnames(spatial_coords) <- c("spatial_1", "spatial_2")

# Build the SeuratObject
cos_seurat <- CreateSeuratObject(
  counts = counts,     
  meta.data = meta_data    
)

# Adding spatial info to the SeuratObject
cos_seurat[["spatial"]] <- CreateDimReducObject(
  embeddings = as.matrix(spatial_coords),
  key = "spatial_",
  assay = "RNA"
)

```

## Data processing and PCA

```{r, warning=FALSE, message=FALSE}

# Normalize the data
cos_seurat <- NormalizeData(cos_seurat)

# Identify variable features
cos_seurat <- FindVariableFeatures(cos_seurat)

# Scale data
cos_seurat <- ScaleData(cos_seurat)

# Run PCA
cos_seurat <- RunPCA(cos_seurat, npcs = 30)

```

## UMAP with Seurat (without Harmony)

```{r, warning=FALSE, message=FALSE}

# Run UMAP and cluster analysis
cos_seurat_pre <- RunUMAP(cos_seurat, dims = 1:30)
cos_seurat_pre <- FindNeighbors(cos_seurat_pre, dims = 1:30)

# Adjust resolution to achieve ~n_clusters
cos_seurat_pre <- FindClusters(cos_seurat_pre, resolution = 0.4) 

# Plot UMAP and clusters
UMAP_pre <- DimPlot(cos_seurat_pre, reduction = "umap", label = TRUE)

# Save the Seurat object for further use
saveRDS(cos_seurat_pre, file.path(cos_path, "rds files/cos_seurat_pre.rds"))

# Plot clusters with spatial context
spatial_clusters_pre <- DimPlot(cos_seurat_pre, reduction = "spatial", label = FALSE)

umap_patient_pre <- DimPlot(cos_seurat_pre, reduction = "umap", group.by = "group")

```

## UMAP with Harmony integrated into Seurat workflow

```{r, warning=FALSE, message=FALSE}

# Run Harmony to integrate across patients
cos_seurat_post <- RunHarmony(cos_seurat, group.by.vars = "group", dims.use = 1:30)

# Run UMAP again on Harmony-corrected PCA
cos_seurat_post <- RunUMAP(cos_seurat_post, reduction = "harmony", dims = 1:30)
cos_seurat_post <- FindNeighbors(cos_seurat_post, reduction = "harmony", dims = 1:30)
cos_seurat_post <- FindClusters(cos_seurat_post, resolution = 0.4)

# UMAP plots after batch correction
UMAP_post <- DimPlot(cos_seurat_post, reduction = "umap", label = TRUE)

# Save the Seurat object for further use
saveRDS(cos_seurat_post, file.path(cos_path, "rds files/cos_seurat_post.rds"))

# Plot clusters with spatial context
spatial_clusters_post <- DimPlot(cos_seurat_post, reduction = "spatial", label = FALSE)

umap_patient_post <- DimPlot(cos_seurat_post, reduction = "umap", group.by = "group")

```

## Summary

```{r, warning=FALSE, message=FALSE}

ggsave("Total transcript counts per cell.tiff",
       path = file.path(cos_path, "QC"),
       compression = 'lzw')

# Compare UMAPs before and after Harmony
UMAP_clusters <- annotate_figure(
  ggarrange(UMAP_pre, UMAP_post, 
            labels = c("A", "B"), 
            ncol = 2, nrow = 1),
  top = "UMAP clusters before and after batch correction")


patient_clusters <- annotate_figure(
  ggarrange(umap_patient_pre, umap_patient_post, 
            labels = c("A", "B"), 
            ncol = 2, nrow = 1),
  top = "Patient clusters before and after batch correction")

spatial <- annotate_figure(
  ggarrange(spatial_clusters_pre, spatial_clusters_post, 
            labels = c("A", "B"),
            ncol = 2, nrow = 1),
  top = "Clusters spatial distribution before and after batch correction")

UMAP_clusters
patient_clusters
spatial

```

```{r}
sessionInfo()
```